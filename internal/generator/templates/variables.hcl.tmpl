variable "job_name" {
  description = "The name to use for the Nomad job (defaults to the pack name)"
  type        = string
  default     = ""
}

variable "service_name" {
  description = "The service name for the MCP server"
  type        = string
  default     = "{{.InferredServiceName}}"
}

variable "datacenters" {
  description = "A list of datacenters in the region which are eligible for task placement"
  type        = list(string)
  default     = ["dc1"]
}

variable "region" {
  description = "The region where the job should be placed"
  type        = string
  default     = "global"
}

variable "count" {
  description = "The number of MCP server instances to run"
  type        = number
  default     = 1
}

variable "cpu" {
  description = "The number of CPU units to reserve for the MCP server task"
  type        = number
  default     = 500
}

variable "memory" {
  description = "The amount of memory in MB to reserve for the MCP server task"
  type        = number
  default     = 512
}
{{if .IsHTTPTransport}}
variable "service_tags" {
  description = "Additional tags for service registration (e.g., Traefik routing tags)"
  type        = list(string)
  default     = []
}

variable "container_port" {
  description = "The port the container listens on"
  type        = number
  default     = {{.InferredContainerPort}}
}

variable "host_port" {
  description = "Static host port (0 for dynamic allocation)"
  type        = number
  default     = 0
}

variable "health_check_interval" {
  description = "Interval for health checks"
  type        = string
  default     = "30s"
}

variable "health_check_timeout" {
  description = "Timeout for health checks"
  type        = string
  default     = "5s"
}
{{end}}
variable "package_name" {
  description = "The npm package name to install"
  type        = string
  default     = "{{.PackageID}}"
}

variable "package_version" {
  description = "The npm package version to install"
  type        = string
  default     = "{{.PackageVersion}}"
}
{{if .HasEnvironment }}
{{range .Environment}}
variable "{{.Name | lower}}" {
  description = "{{.Description}}"
  type        = string
  {{- if .Default}}
  default     = "{{.Default}}"
  {{- end}}
}
{{end}}
{{end}}{{if .HasArguments}}

{{range .Arguments}}
variable "{{.Name | lower}}" {
  description = "{{.Description}}"
  type        = string
  {{- if .Default}}
  default     = "{{.Default}}"
  {{- end}}
}
{{end}}
{{end}}
