job [[ template "job_name" . ]] {
  [[ template "region" . ]]
  datacenters = [[ var "datacenters" . | toStringList ]]
  type        = "service"
  
  group "mcp-server" {
    count = [[ var "count" . ]]

    {{- if or (eq .Transport.Type "streamable-http") (eq .Transport.Type "sse")}}
    network {
      port "http" {
        to = [[ var "container_port" . ]]
        [[ if ne (var "host_port" .) 0 -]]
        static = [[ var "host_port" . ]]
        [[- end ]]
      }
    }

    service {
      name = [[ var "service_name" . | quote ]]
      port = "http"

      tags = [[ var "service_tags" . | toStringList ]]

      check {
        type     = "tcp"
        interval = [[ var "health_check_interval" . | quote ]]
        timeout  = [[ var "health_check_timeout" . | quote ]]
      }
    }

    {{- end}}

    task "{{.TaskName}}" {
      driver = "docker"

      config {
        image = "{{.PackageID}}"
        {{- if .RegistryURL}}
        image_pull_timeout = "10m"
        {{- end}}
        {{- if or (eq .Transport.Type "streamable-http") (eq .Transport.Type "sse")}}
        ports = ["http"]
        {{- end}}
        
        {{- if or .Environment .RuntimeArgs .PackageArgs}}
        args = [
          {{- if .RuntimeArgs}}
          {{- range .RuntimeArgs}}
          {{- if eq .Type "positional"}}
          [[ var "{{.Name | lower}}" . | quote ]],
          {{- else}}
          "{{.Name}}",
          [[ var "{{.Name | lower}}" . | quote ]],
          {{- end}}
          {{- end}}
          {{- end}}
          {{- if .PackageArgs}}
          {{- range .PackageArgs}}
          {{- if eq .Type "positional"}}
          [[ var "{{.Name | lower}}" . | quote ]],
          {{- else}}
          "{{.Name}}",
          [[ var "{{.Name | lower}}" . | quote ]],
          {{- end}}
          {{- end}}
          {{- end}}
        ]
        {{- end}}
      }

      {{- if .Environment}}
      env {
        {{- range .Environment}}
        {{.Name}} = [[ var "{{.Name | lower}}" . | quote ]]
        {{- end}}
      }
      {{- end}}

      resources {
        cpu    = [[ var "cpu" . ]]
        memory = [[ var "memory" . ]]
      }

      {{- if .HasTransport}}
      {{- if eq .Transport.Type "stdio"}}
      # MCP Server configured for stdio transport
      {{- else if eq .Transport.Type "sse"}}
      # MCP Server configured for SSE transport
      {{- end}}
      {{- end}}
    }
  }
}