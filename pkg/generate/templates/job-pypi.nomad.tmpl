job "[[ template "job_name" . ]]" {
  datacenters = [[ .my.datacenters | toJson ]]
  region      = "[[ .my.region ]]"
  type        = "service"
  
  group "mcp-server" {
    count = [[ .my.count ]]

    {{- if and .HasTransport (ne .Transport.Type "stdio")}}
    network {
      port "mcp" {
        static = 3000
      }
    }

    service {
      name = "[[ template "job_name" . ]]-mcp"
      port = "mcp"
      
      check {
        type     = "http"
        path     = "/health"
        interval = "10s"
        timeout  = "2s"
      }
    }
    {{- end}}

    task "{{.TaskName}}" {
      driver = "exec"

      config {
        command = "/bin/bash"
        args    = ["local/run.sh"]
      }

      {{- if .Environment}}
      env {
        PYTHONPATH = "${NOMAD_TASK_DIR}/local/venv/lib/python3/site-packages"
        {{- range .Environment}}
        {{.Name}} = "[[ .my.{{.Name | lower}} ]]"
        {{- end}}
      }
      {{- else}}
      env {
        PYTHONPATH = "${NOMAD_TASK_DIR}/local/venv/lib/python3/site-packages"
      }
      {{- end}}

      template {
        data = <<EOF
#!/bin/bash
set -e

# Create virtual environment
python3 -m venv ${NOMAD_TASK_DIR}/local/venv
source ${NOMAD_TASK_DIR}/local/venv/bin/activate

# Install package
pip install {{.PackageID}}=={{.PackageVersion}}

# Run the MCP server
exec python -m {{.PackageID}} \
{{- if .RuntimeArgs}}
{{- range .RuntimeArgs}}
{{- if eq .Type "positional"}}
  "[[ .my.{{.Name | lower}} ]]" \
{{- else}}
  --{{.Name}} "[[ .my.{{.Name | lower}} ]]" \
{{- end}}
{{- end}}
{{- end}}
{{- if .PackageArgs}}
{{- range .PackageArgs}}
{{- if eq .Type "positional"}}
  "[[ .my.{{.Name | lower}} ]]" \
{{- else}}
  --{{.Name}} "[[ .my.{{.Name | lower}} ]]" \
{{- end}}
{{- end}}
{{- end}}
EOF
        destination = "local/run.sh"
        perms       = "755"
      }

      resources {
        cpu    = [[ .my.cpu ]]
        memory = [[ .my.memory ]]
      }

      {{- if .HasTransport}}
      {{- if eq .Transport.Type "stdio"}}
      # MCP Server configured for stdio transport
      {{- else if eq .Transport.Type "sse"}}
      # MCP Server configured for SSE transport
      {{- end}}
      {{- end}}
    }
  }
}